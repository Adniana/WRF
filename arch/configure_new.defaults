###########################################################
#ARCH    PC Linux i486 i586 i686, PGI compiler with gcc #serial smpar dmpar dm+sm
#
DMPARALLEL      =       # 1
OMPCPP		=	# -D_OPENMP
OMP		=	# -mp
SFC		=       pgf90
SCC		=       gcc
DM_FC		=	mpif90 -f90=$(SFC)
DM_CC		=       mpicc -cc=$(SCC)
FC              =       CONFIGURE_FC
CC              =       CONFIGURE_CC
LD		=	$(FC)
RWORDSIZE       =       CONFIGURE_RWORDSIZE
PROMOTION       =       -r$(RWORDSIZE) -i4
ARCH_LOCAL      =       -DMOVE_NL_OUTSIDE_MODULE_CONFIGURE -DNONSTANDARD_SYSTEM
CFLAGS_LOCAL    =       
FCOPTIM		=       -O2 -fast
FCDEBUG         =       # -g -O0
FORMAT_FIXED    =       -Mfixed
FORMAT_FREE     =       -Mfree
FCSUFFIX        =       
BYTESWAPIO      =       -byteswapio
FCBASEOPTS      =       -w $(FCDEBUG) $(FORMAT_FREE) $(BYTESWAPIO)
MODULE_SRCH_FLAG =     -module
TRADFLAG        =      -traditional
CPP             =      /lib/cpp -C -P
AR		=      ar ru
M4 		=      m4 -B 14000
RANLIB 		=      ranlib

###########################################################
#ARCH    x86_64 Linux, ifort compiler with icc 9.x,10.x #serial smpar dmpar dm+sm
#
#        By default, some files are compiled without optimizations to speed up compilation. Removing
#        respective makefile rules in the end of this file will result in longer compilation time, and, possibly
#        Out Of Memory messages, but might produce binaries which are substantially faster.
#
#        If you got Out Of Memory message, there are several options:
#          1. Check your memory limits (ulimit -a), possibly increasing swap partitions size.
#          2. Remove any debugging flags (-g, -check, -traceback).
#          3. Force the problematic file to be compiled with less optimizations (see examples at the 
#             end of this file), try -no-ip compiler flag.
#
#        This configuration is aimed at accuracy. To improve performance (at the expence of accuracy) you might
#        consider removing '-fp-model precise' flag from FCBASEOPTS. This enables non value-safe optimizations.
#        Another option is to add '-ftz' flag, which flushes denormal results to zero when the application is in
#        the gradual underflow mode. It may improve performance if the denormal values are not critical to the
#        behavior of your workload.
#
#        If you have Intel MPI installed and wish to use instead, make the
#        following changes to settings below:
#        DM_FC  = $(MPI_HOME)/bin64/mpiifort -nocompchk
#        DM_CC  = $(MPI_HOME)/bin64/mpiicc -nocompch

DMPARALLEL      =       # 1
OMPCPP          =       # -D_OPENMP
OMP             =       # -openmp -fpp -auto
SFC             =       ifort
SCC             =       icc
DM_FC           =       $(MPI_HOME)/bin/mpif90 -f90=$(SFC)
DM_CC           =       $(MPI_HOME)/bin/mpicc -cc=$(SCC)
FC              =       CONFIGURE_FC
CC              =       CONFIGURE_CC
LD              =       $(FC)
RWORDSIZE       =       CONFIGURE_RWORDSIZE
PROMOTION       =       -r$(RWORDSIZE) -i4
ARCH_LOCAL      =       -DMOVE_NL_OUTSIDE_MODULE_CONFIGURE -DNONSTANDARD_SYSTEM
CFLAGS_LOCAL    =       -w -O3 -ip
FCOPTIM         =       -O3
FCDEBUG         =       # -g -O0 -traceback
FORMAT_FIXED    =       -FI
FORMAT_FREE     =       -FR
FCSUFFIX        =
BYTESWAPIO      =       -convert big_endian
FCBASEOPTS      =       -w $(FCDEBUG) $(FORMAT_FREE) $(BYTESWAPIO)
MODULE_SRCH_FLAG =     
TRADFLAG        =      -traditional
CPP             =      /lib/cpp -C -P
AR              =      ar ru
M4              =      m4
RANLIB          =      ranlib

###########################################################
#ARCH    Darwin PGI compiler with pgcc #serial smpar dmpar dm+sm
#
DMPARALLEL      =       # 1
OMPCPP		=	# -D_OPENMP
OMP		=	# -mp
SFC		=       pgf90
SCC		=       pgcc
DM_FC		=	mpif90 -f90=$(SFC)
DM_CC		=       mpicc -cc=$(SCC)
FC              =       CONFIGURE_FC
CC              =       CONFIGURE_CC
LD		=	$(FC)
RWORDSIZE       =       CONFIGURE_RWORDSIZE
PROMOTION       =       -r$(RWORDSIZE) -i4
ARCH_LOCAL      =       -DMACOS -DMOVE_NL_OUTSIDE_MODULE_CONFIGURE -DNO_RRTM_PHYSICS -DNONSTANDARD_SYSTEM
CFLAGS_LOCAL    =       -DMACOS
FCOPTIM		=       -O2 -fast
FCDEBUG         =       # -g -O0
FORMAT_FIXED    =       -Mfixed
FORMAT_FREE     =       -Mfree
FCSUFFIX        =       
BYTESWAPIO      =       -byteswapio
FCBASEOPTS      =       -w $(FCDEBUG) $(FORMAT_FREE) $(BYTESWAPIO)
MODULE_SRCH_FLAG =     -module
TRADFLAG        =      -traditional
CPP             =      cpp -C -P -xassembler-with-cpp
AR		=      ar ru
M4 		=      m4 -B 14000
RANLIB 		=      ranlib

###########################################################
#ARCH    AIX xlf compiler with xlc #serial smpar dmpar dm+sm
#
DMPARALLEL      =       # 1
OMPCPP		=	# -D_OPENMP
OMP		=	# -qsmp=noauto:noopt
SFC		=       xlf90_r
SCC		=       cc_r
DM_FC		=	mpxlf90_r
DM_CC		=       mpcc_r
FC              =       CONFIGURE_FC
CC              =       CONFIGURE_CC
LD		=	$(FC)
RWORDSIZE       =       CONFIGURE_RWORDSIZE
PROMOTION       =        -qrealsize=$(RWORDSIZE) -qintsize=4
ARCH_LOCAL      =       -DMOVE_NL_OUTSIDE_MODULE_CONFIGURE -DNONSTANDARD_SYSTEM
CFLAGS_LOCAL    =       -DNOUNDERSCORE
FCOPTIM		=       -O3 -qhot
FCDEBUG         =       # -g -qnoopt -qfullpath
FORMAT_FIXED    =       -qfixed
FORMAT_FREE     =       -qfree=f90
FCSUFFIX        =       -qsuffix=f=f90
BYTESWAPIO      =       
FCBASEOPTS      =       -w -qspill=20000 -qmaxmem=32767 $(FCDEBUG) $(FORMAT_FREE) $(BYTESWAPIO)  #-qflttrap=zerodivide:invalid:enable -qsigtrap
MODULE_SRCH_FLAG =     
TRADFLAG        =       
CPP             =       /lib/cpp -C -P
AR		=       ar ru
M4 		=       m4 -B 14000
RANLIB 		=       ranlib

#ARCH  NULL
##################################################################
